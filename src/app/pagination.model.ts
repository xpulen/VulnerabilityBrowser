export class Pagination {
  currentPage: number;
  offset: number;
  limit: number;
  pagesTotal: number;
  entriesTotal: number;

  constructor(limit) {
    this.currentPage = 1;
    this.limit = limit;
    this.offset = (this.currentPage - 1) * this.limit;
    this.pagesTotal = 0;
  }

  // TODO: if overflow...
  updatePage(pageNum) {
    this.currentPage = pageNum;
    this.offset = (this.currentPage - 1) * this.limit;
  }

  getPageCount() {
    this.pagesTotal = Math.ceil(this.entriesTotal / this.limit);
    return this.pagesTotal;
  }

  updateLimit(limit) {
    // tslint:disable-next-line:radix
    this.limit = parseInt(limit);
    this.offset = (this.currentPage - 1) * this.limit;
    this.pagesTotal = Math.ceil(this.entriesTotal / this.limit);
  }


}
